Microsoft (R) Macro Assembler Version 14.00.24210.0	    12/11/17 09:16:15
D:\Downloads\ascii.asm					     Page 1 - 1



				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				include winmm.inc
			      C ; --------------------------------------------------------------------------------------------------
			      C ;                            winmm.inc Copyright The MASM32 SDK 1998-2010
			      C ; --------------------------------------------------------------------------------------------------
			      C 
			      C IFNDEF WINMM_INC
 = 1			      C WINMM_INC equ <1>
			      C 
			      C CloseDriver PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C DefDriverProc PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C DriverCallback PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C DrvGetModuleHandle PROTO STDCALL :DWORD
			      C GetDriverModuleHandle PROTO STDCALL :DWORD
			      C MigrateAllDrivers PROTO STDCALL
			      C MigrateSoundEvents PROTO STDCALL
			      C NotifyCallbackData PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C OpenDriver PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C PlaySoundA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = PlaySoundA		      C   PlaySound equ <PlaySoundA>
			      C ENDIF
			      C 
			      C PlaySoundW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C SendDriverMessage PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C WOW32DriverCallback PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C WOW32ResolveMultiMediaHandle PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C WOWAppExit PROTO STDCALL :DWORD
			      C WinmmLogoff PROTO STDCALL
			      C WinmmLogon PROTO STDCALL :DWORD
			      C aux32Message PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C auxGetDevCapsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = auxGetDevCapsA	      C   auxGetDevCaps equ <auxGetDevCapsA>
			      C ENDIF
			      C 
			      C auxGetDevCapsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C auxGetNumDevs PROTO STDCALL
			      C auxGetVolume PROTO STDCALL :DWORD,:DWORD
			      C auxOutMessage PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C auxSetVolume PROTO STDCALL :DWORD,:DWORD
			      C gfxAddGfx PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C gfxBatchChange PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C gfxCreateGfxFactoriesList PROTO STDCALL :DWORD,:DWORD
			      C gfxCreateZoneFactoriesList PROTO STDCALL :DWORD
			      C gfxDestroyDeviceInterfaceList PROTO STDCALL :DWORD
			      C gfxEnumerateGfxs PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C gfxLogoff PROTO STDCALL
			      C gfxLogon PROTO STDCALL :DWORD
			      C gfxModifyGfx PROTO STDCALL :DWORD,:DWORD
			      C gfxOpenGfx PROTO STDCALL :DWORD,:DWORD
			      C gfxRemoveGfx PROTO STDCALL :DWORD
			      C joy32Message PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C joyConfigChanged PROTO STDCALL :DWORD
			      C 
			      C joyGetDevCapsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = joyGetDevCapsA	      C   joyGetDevCaps equ <joyGetDevCapsA>
			      C ENDIF
			      C 
			      C joyGetDevCapsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C joyGetNumDevs PROTO STDCALL
			      C joyGetPos PROTO STDCALL :DWORD,:DWORD
			      C joyGetPosEx PROTO STDCALL :DWORD,:DWORD
			      C joyGetThreshold PROTO STDCALL :DWORD,:DWORD
			      C joyReleaseCapture PROTO STDCALL :DWORD
			      C joySetCapture PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C joySetThreshold PROTO STDCALL :DWORD,:DWORD
			      C mci32Message PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C mciDriverNotify PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C mciDriverYield PROTO STDCALL :DWORD
			      C mciExecute PROTO STDCALL :DWORD
			      C mciFreeCommandResource PROTO STDCALL :DWORD
			      C mciGetCreatorTask PROTO STDCALL :DWORD
			      C 
			      C mciGetDeviceIDA PROTO STDCALL :DWORD
			      C IFNDEF __UNICODE__
 = mciGetDeviceIDA	      C   mciGetDeviceID equ <mciGetDeviceIDA>
			      C ENDIF
			      C 
			      C mciGetDeviceIDFromElementIDA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mciGetDeviceIDFromElemen   C   mciGetDeviceIDFromElementID equ <mciGetDeviceIDFromElementIDA>
   tIDA
			      C ENDIF
			      C 
			      C mciGetDeviceIDFromElementIDW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mciGetDeviceIDW PROTO STDCALL :DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mciGetDriverData PROTO STDCALL :DWORD
			      C 
			      C mciGetErrorStringA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mciGetErrorStringA	      C   mciGetErrorString equ <mciGetErrorStringA>
			      C ENDIF
			      C 
			      C mciGetErrorStringW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mciGetYieldProc PROTO STDCALL :DWORD,:DWORD
			      C mciLoadCommandResource PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C mciSendCommandA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mciSendCommandA	      C   mciSendCommand equ <mciSendCommandA>
			      C ENDIF
			      C 
			      C mciSendCommandW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mciSendStringA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mciSendStringA	      C   mciSendString equ <mciSendStringA>
			      C ENDIF
			      C 
			      C mciSendStringW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mciSetDriverData PROTO STDCALL :DWORD,:DWORD
			      C mciSetYieldProc PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C mid32Message PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C midiConnect PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C midiDisconnect PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C midiInAddBuffer PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C midiInClose PROTO STDCALL :DWORD
			      C 
			      C midiInGetDevCapsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = midiInGetDevCapsA	      C   midiInGetDevCaps equ <midiInGetDevCapsA>
			      C ENDIF
			      C 
			      C midiInGetDevCapsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C midiInGetErrorTextA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = midiInGetErrorTextA	      C   midiInGetErrorText equ <midiInGetErrorTextA>
			      C ENDIF
			      C 
			      C midiInGetErrorTextW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C midiInGetID PROTO STDCALL :DWORD,:DWORD
			      C midiInGetNumDevs PROTO STDCALL
			      C midiInMessage PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C midiInOpen PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C midiInPrepareHeader PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C midiInReset PROTO STDCALL :DWORD
			      C midiInStart PROTO STDCALL :DWORD
			      C midiInStop PROTO STDCALL :DWORD
			      C midiInUnprepareHeader PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C midiOutCacheDrumPatches PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C midiOutCachePatches PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C midiOutClose PROTO STDCALL :DWORD
			      C 
			      C midiOutGetDevCapsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = midiOutGetDevCapsA	      C   midiOutGetDevCaps equ <midiOutGetDevCapsA>
			      C ENDIF
			      C 
			      C midiOutGetDevCapsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C midiOutGetErrorTextA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = midiOutGetErrorTextA	      C   midiOutGetErrorText equ <midiOutGetErrorTextA>
			      C ENDIF
			      C 
			      C midiOutGetErrorTextW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C midiOutGetID PROTO STDCALL :DWORD,:DWORD
			      C midiOutGetNumDevs PROTO STDCALL
			      C midiOutGetVolume PROTO STDCALL :DWORD,:DWORD
			      C midiOutLongMsg PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C midiOutMessage PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C midiOutOpen PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C midiOutPrepareHeader PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C midiOutReset PROTO STDCALL :DWORD
			      C midiOutSetVolume PROTO STDCALL :DWORD,:DWORD
			      C midiOutShortMsg PROTO STDCALL :DWORD,:DWORD
			      C midiOutUnprepareHeader PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C midiStreamClose PROTO STDCALL :DWORD
			      C midiStreamOpen PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C midiStreamOut PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C midiStreamPause PROTO STDCALL :DWORD
			      C midiStreamPosition PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C midiStreamProperty PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C midiStreamRestart PROTO STDCALL :DWORD
			      C midiStreamStop PROTO STDCALL :DWORD
			      C mixerClose PROTO STDCALL :DWORD
			      C 
			      C mixerGetControlDetailsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mixerGetControlDetailsA    C   mixerGetControlDetails equ <mixerGetControlDetailsA>
			      C ENDIF
			      C 
			      C mixerGetControlDetailsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mixerGetDevCapsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mixerGetDevCapsA	      C   mixerGetDevCaps equ <mixerGetDevCapsA>
			      C ENDIF
			      C 
			      C mixerGetDevCapsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mixerGetID PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C mixerGetLineControlsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mixerGetLineControlsA      C   mixerGetLineControls equ <mixerGetLineControlsA>
			      C ENDIF
			      C 
			      C mixerGetLineControlsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mixerGetLineInfoA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mixerGetLineInfoA	      C   mixerGetLineInfo equ <mixerGetLineInfoA>
			      C ENDIF
			      C 
			      C mixerGetLineInfoW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mixerGetNumDevs PROTO STDCALL
			      C mixerMessage PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C mixerOpen PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C mixerSetControlDetails PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C mmDrvInstall PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C mmGetCurrentTask PROTO STDCALL
			      C mmTaskBlock PROTO STDCALL :DWORD
			      C mmTaskCreate PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C mmTaskSignal PROTO STDCALL :DWORD
			      C mmTaskYield PROTO STDCALL
			      C mmioAdvance PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C mmioAscend PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C mmioClose PROTO STDCALL :DWORD,:DWORD
			      C mmioCreateChunk PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C mmioDescend PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C mmioFlush PROTO STDCALL :DWORD,:DWORD
			      C mmioGetInfo PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C mmioInstallIOProcA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mmioInstallIOProcA	      C   mmioInstallIOProc equ <mmioInstallIOProcA>
			      C ENDIF
			      C 
			      C mmioInstallIOProcW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mmioOpenA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mmioOpenA		      C   mmioOpen equ <mmioOpenA>
			      C ENDIF
			      C 
			      C mmioOpenW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mmioRead PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C mmioRenameA PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mmioRenameA		      C   mmioRename equ <mmioRenameA>
			      C ENDIF
			      C 
			      C mmioRenameW PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mmioSeek PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C mmioSendMessage PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C mmioSetBuffer PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C mmioSetInfo PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C 
			      C mmioStringToFOURCCA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = mmioStringToFOURCCA	      C   mmioStringToFOURCC equ <mmioStringToFOURCCA>
			      C ENDIF
			      C 
			      C mmioStringToFOURCCW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C mmioWrite PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C mmsystemGetVersion PROTO STDCALL
			      C mod32Message PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C mxd32Message PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C sndPlaySoundA PROTO STDCALL :DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = sndPlaySoundA	      C   sndPlaySound equ <sndPlaySoundA>
			      C ENDIF
			      C 
			      C sndPlaySoundW PROTO STDCALL :DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C tid32Message PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C timeBeginPeriod PROTO STDCALL :DWORD
			      C timeEndPeriod PROTO STDCALL :DWORD
			      C timeGetDevCaps PROTO STDCALL :DWORD,:DWORD
			      C timeGetSystemTime PROTO STDCALL :DWORD,:DWORD
			      C timeGetTime PROTO STDCALL
			      C timeKillEvent PROTO STDCALL :DWORD
			      C timeSetEvent PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C waveInAddBuffer PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C waveInClose PROTO STDCALL :DWORD
			      C 
			      C waveInGetDevCapsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = waveInGetDevCapsA	      C   waveInGetDevCaps equ <waveInGetDevCapsA>
			      C ENDIF
			      C 
			      C waveInGetDevCapsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C waveInGetErrorTextA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = waveInGetErrorTextA	      C   waveInGetErrorText equ <waveInGetErrorTextA>
			      C ENDIF
			      C 
			      C waveInGetErrorTextW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C waveInGetID PROTO STDCALL :DWORD,:DWORD
			      C waveInGetNumDevs PROTO STDCALL
			      C waveInGetPosition PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C waveInMessage PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C waveInOpen PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C waveInPrepareHeader PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C waveInReset PROTO STDCALL :DWORD
			      C waveInStart PROTO STDCALL :DWORD
			      C waveInStop PROTO STDCALL :DWORD
			      C waveInUnprepareHeader PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C waveOutBreakLoop PROTO STDCALL :DWORD
			      C waveOutClose PROTO STDCALL :DWORD
			      C 
			      C waveOutGetDevCapsA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = waveOutGetDevCapsA	      C   waveOutGetDevCaps equ <waveOutGetDevCapsA>
			      C ENDIF
			      C 
			      C waveOutGetDevCapsW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C waveOutGetErrorTextA PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFNDEF __UNICODE__
 = waveOutGetErrorTextA	      C   waveOutGetErrorText equ <waveOutGetErrorTextA>
			      C ENDIF
			      C 
			      C waveOutGetErrorTextW PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C IFDEF __UNICODE__
			      C ENDIF
			      C 
			      C waveOutGetID PROTO STDCALL :DWORD,:DWORD
			      C waveOutGetNumDevs PROTO STDCALL
			      C waveOutGetPitch PROTO STDCALL :DWORD,:DWORD
			      C waveOutGetPlaybackRate PROTO STDCALL :DWORD,:DWORD
			      C waveOutGetPosition PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C waveOutGetVolume PROTO STDCALL :DWORD,:DWORD
			      C waveOutMessage PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD
			      C waveOutOpen PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C waveOutPause PROTO STDCALL :DWORD
			      C waveOutPrepareHeader PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C waveOutReset PROTO STDCALL :DWORD
			      C waveOutRestart PROTO STDCALL :DWORD
			      C waveOutSetPitch PROTO STDCALL :DWORD,:DWORD
			      C waveOutSetPlaybackRate PROTO STDCALL :DWORD,:DWORD
			      C waveOutSetVolume PROTO STDCALL :DWORD,:DWORD
			      C waveOutUnprepareHeader PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C waveOutWrite PROTO STDCALL :DWORD,:DWORD,:DWORD
			      C wid32Message PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C winmmDbgOut PROTO C :VARARG
			      C winmmSetDebugLevel PROTO STDCALL :DWORD
			      C wod32Message PROTO STDCALL :DWORD,:DWORD,:DWORD,:DWORD,:DWORD
			      C 
			      C ELSE
			      C ENDIF
			      C 
				includelib winmm.lib

 00000000			.data

				titulo 
D:\Downloads\ascii.asm(8) : error A2008:syntax error : titulo
D:\Downloads\ascii.asm(8) : error A2071:initializer magnitude too large for specified size
 00000000  20 20 20 20 20	BYTE "                  _______..______        ___        ______  _______ ",0ah,0dh
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 5F 5F
	   5F 5F 5F 5F 5F
	   2E 2E 5F 5F 5F
	   5F 5F 5F 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 5F 5F 5F
	   5F 5F 5F 20 20
	   5F 5F 5F 5F 5F
	   5F 5F 20 0A 0D
 00000046  20 20 20 20 20	BYTE "                 /       ||   _  \      /   \      /      ||   ____| ",0ah,0dh
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 2F 20 20
	   20 20 20 20 20
	   7C 7C 20 20 20
	   5F 20 20 5C 20
	   20 20 20 20 20
	   2F 20 20 20 5C
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 20 7C 7C
	   20 20 20 5F 5F
	   5F 5F 7C 20 0A
	   0D
 0000008D  20 20 20 20 20	BYTE "                |   (----`|  |_)  |    /  ^  \    |  ,----'|  |__    ",0ah,0dh
	   20 20 20 20 20
	   20 20 20 20 20
	   20 7C 20 20 20
	   28 2D 2D 2D 2D
	   60 7C 20 20 7C
	   5F 29 20 20 7C
	   20 20 20 20 2F
	   20 20 5E 20 20
	   5C 20 20 20 20
	   7C 20 20 2C 2D
	   2D 2D 2D 27 7C
	   20 20 7C 5F 5F
	   20 20 20 20 0A
	   0D
 000000D4  20 20 20 20 20	BYTE "                 \   \    |   ___/    /  /_\  \   |  |     |   __|   ",0ah,0dh
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 5C 20 20
	   20 5C 20 20 20
	   20 7C 20 20 20
	   5F 5F 5F 2F 20
	   20 20 20 2F 20
	   20 2F 5F 5C 20
	   20 5C 20 20 20
	   7C 20 20 7C 20
	   20 20 20 20 7C
	   20 20 20 5F 5F
	   7C 20 20 20 0A
	   0D
 0000011B  20 20 20 20 20	BYTE "             .----)   |   |  |       /  _____  \  |  `----.|  |____  ",0ah,0dh
	   20 20 20 20 20
	   20 20 20 2E 2D
	   2D 2D 2D 29 20
	   20 20 7C 20 20
	   20 7C 20 20 7C
	   20 20 20 20 20
	   20 20 2F 20 20
	   5F 5F 5F 5F 5F
	   20 20 5C 20 20
	   7C 20 20 60 2D
	   2D 2D 2D 2E 7C
	   20 20 7C 5F 5F
	   5F 5F 20 20 0A
	   0D
 00000162  20 20 20 20 20	BYTE "             |_______/    | _|      /__/     \__\  \______||_______| ",0ah,0dh
	   20 20 20 20 20
	   20 20 20 7C 5F
	   5F 5F 5F 5F 5F
	   5F 2F 20 20 20
	   20 7C 20 5F 7C
	   20 20 20 20 20
	   20 2F 5F 5F 2F
	   20 20 20 20 20
	   5C 5F 5F 5C 20
	   20 5C 5F 5F 5F
	   5F 5F 5F 7C 7C
	   5F 5F 5F 5F 5F
	   5F 5F 7C 20 0A
	   0D
 000001A9  20 20 5F 5F 20	BYTE "  __  .__   __. ____    ____      ___       _______   _______ .______        _______. ",0ah,0dh
	   20 2E 5F 5F 20
	   20 20 5F 5F 2E
	   20 5F 5F 5F 5F
	   20 20 20 20 5F
	   5F 5F 5F 20 20
	   20 20 20 20 5F
	   5F 5F 20 20 20
	   20 20 20 20 5F
	   5F 5F 5F 5F 5F
	   5F 20 20 20 5F
	   5F 5F 5F 5F 5F
	   5F 20 2E 5F 5F
	   5F 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 5F 5F 5F
	   5F 5F 5F 5F 2E
	   20 0A 0D
 00000201  20 7C 20 20 7C	BYTE " |  | |  \ |  | \   \  /   /     /   \     |       \ |   ____||   _  \      /       | ",0ah,0dh
	   20 7C 20 20 5C
	   20 7C 20 20 7C
	   20 5C 20 20 20
	   5C 20 20 2F 20
	   20 20 2F 20 20
	   20 20 20 2F 20
	   20 20 5C 20 20
	   20 20 20 7C 20
	   20 20 20 20 20
	   20 5C 20 7C 20
	   20 20 5F 5F 5F
	   5F 7C 7C 20 20
	   20 5F 20 20 5C
	   20 20 20 20 20
	   20 2F 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 00000259  20 7C 20 20 7C	BYTE " |  | |   \|  |  \   \/   /     /  ^  \    |  .--.  ||  |__   |  |_)  |    |   (----` ",0ah,0dh
	   20 7C 20 20 20
	   5C 7C 20 20 7C
	   20 20 5C 20 20
	   20 5C 2F 20 20
	   20 2F 20 20 20
	   20 20 2F 20 20
	   5E 20 20 5C 20
	   20 20 20 7C 20
	   20 2E 2D 2D 2E
	   20 20 7C 7C 20
	   20 7C 5F 5F 20
	   20 20 7C 20 20
	   7C 5F 29 20 20
	   7C 20 20 20 20
	   7C 20 20 20 28
	   2D 2D 2D 2D 60
	   20 0A 0D
 000002B1  20 7C 20 20 7C	BYTE " |  | |  . `  |   \      /     /  /_\  \   |  |  |  ||   __|  |      /      \   \     ",0ah,0dh
	   20 7C 20 20 2E
	   20 60 20 20 7C
	   20 20 20 5C 20
	   20 20 20 20 20
	   2F 20 20 20 20
	   20 2F 20 20 2F
	   5F 5C 20 20 5C
	   20 20 20 7C 20
	   20 7C 20 20 7C
	   20 20 7C 7C 20
	   20 20 5F 5F 7C
	   20 20 7C 20 20
	   20 20 20 20 2F
	   20 20 20 20 20
	   20 5C 20 20 20
	   5C 20 20 20 20
	   20 0A 0D
 00000309  20 7C 20 20 7C	BYTE " |  | |  |\   |    \    /     /  _____  \  |  '--'  ||  |____ |  |\  \--..---)   |    ",0ah,0dh
	   20 7C 20 20 7C
	   5C 20 20 20 7C
	   20 20 20 20 5C
	   20 20 20 20 2F
	   20 20 20 20 20
	   2F 20 20 5F 5F
	   5F 5F 5F 20 20
	   5C 20 20 7C 20
	   20 27 2D 2D 27
	   20 20 7C 7C 20
	   20 7C 5F 5F 5F
	   5F 20 7C 20 20
	   7C 5C 20 20 5C
	   2D 2D 2E 2E 2D
	   2D 2D 29 20 20
	   20 7C 20 20 20
	   20 0A 0D
 00000361  20 7C 5F 5F 7C	BYTE " |__| |__| \__|     \__/     /__/     \__\ |_______/ |_______|| _| `.___||______/     ",0
	   20 7C 5F 5F 7C
	   20 5C 5F 5F 7C
	   20 20 20 20 20
	   5C 5F 5F 2F 20
	   20 20 20 20 2F
	   5F 5F 2F 20 20
	   20 20 20 5C 5F
	   5F 5C 20 7C 5F
	   5F 5F 5F 5F 5F
	   5F 2F 20 7C 5F
	   5F 5F 5F 5F 5F
	   5F 7C 7C 20 5F
	   7C 20 60 2E 5F
	   5F 5F 7C 7C 5F
	   5F 5F 5F 5F 5F
	   2F 20 20 20 20
	   20 00


 000003B8 20 0A 0D		digite BYTE " ", 0ah, 0dh
 000003BB  20 50 61 72 61		   BYTE " Para iniciar o jogo aperte 1: ",0
	   20 69 6E 69 63
	   69 61 72 20 6F
	   20 6A 6F 67 6F
	   20 61 70 65 72
	   74 65 20 31 3A
	   20 00
 000003DB 20 41 20 65 20	Instrucoes BYTE " A e D para movimentacao e Espaco para atirar", 0ah, 0dh, " Digite 1 para iniciar o jogo: ",0
	   44 20 70 61 72
	   61 20 6D 6F 76
	   69 6D 65 6E 74
	   61 63 61 6F 20
	   65 20 45 73 70
	   61 63 6F 20 70
	   61 72 61 20 61
	   74 69 72 61 72
	   0A 0D 20 44 69
	   67 69 74 65 20
	   31 20 70 61 72
	   61 20 69 6E 69
	   63 69 61 72 20
	   6F 20 6A 6F 67
	   6F 3A 20 00

 0000042A 20 20 5F 5F 5F	tela  BYTE "  _____________________________________  ", 0ah, 0dh 
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 20
	   20 0A 0D
 00000455  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 00000480  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 000004AB  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 000004D6  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 00000501  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 0000052C  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 00000557  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 00000582  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 000005AD  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 000005D8  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 00000603  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 0000062E  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 00000659  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 00000684  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 000006AF  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 000006DA  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 00000705  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 00000730  20 7C 20 20 20	      BYTE " |                                     | ", 0ah, 0dh 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 0000075B  20 7C 2D 2D 2D	      BYTE " |-------------------------------------| ", 0ah, 0dh  
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 7C
	   20 0A 0D
 00000786  20 7C 20 20 20	      BYTE " |              /o\                    | ", 0ah, 0dh  
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2F 6F 5C 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 0A 0D
 000007B1  20 7C 20 20 20	      BYTE " |              \u/                    |", 0 
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5C 75 2F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   00


				perdeu 
D:\Downloads\ascii.asm(51) : error A2008:syntax erro
D:\Downloads\ascii.asm(51) : error A2071:initializer magnitude too large for specified size
 000007DA  20 20 20 20 20	BYTE "         ____    ____   ______     ______  _______  ",0ah, 0dh
	   20 20 20 20 5F
	   5F 5F 5F 20 20
	   20 20 5F 5F 5F
	   5F 20 20 20 5F
	   5F 5F 5F 5F 5F
	   20 20 20 20 20
	   5F 5F 5F 5F 5F
	   5F 20 20 5F 5F
	   5F 5F 5F 5F 5F
	   20 20 0A 0D
 00000810  20 20 20 20 20	BYTE "         \   \  /   /  /  __  \   /      ||   ____| ",0ah, 0dh
	   20 20 20 20 5C
	   20 20 20 5C 20
	   20 2F 20 20 20
	   2F 20 20 2F 20
	   20 5F 5F 20 20
	   5C 20 20 20 2F
	   20 20 20 20 20
	   20 7C 7C 20 20
	   20 5F 5F 5F 5F
	   7C 20 0A 0D
 00000846  20 20 20 20 20	BYTE "          \   \/   /  |  |  |  | |  ,----'|  |__    ",0ah, 0dh
	   20 20 20 20 20
	   5C 20 20 20 5C
	   2F 20 20 20 2F
	   20 20 7C 20 20
	   7C 20 20 7C 20
	   20 7C 20 7C 20
	   20 2C 2D 2D 2D
	   2D 27 7C 20 20
	   7C 5F 5F 20 20
	   20 20 0A 0D
 0000087C  20 20 20 20 20	BYTE "           \      /   |  |  |  | |  |     |   __|   ",0ah, 0dh
	   20 20 20 20 20
	   20 5C 20 20 20
	   20 20 20 2F 20
	   20 20 7C 20 20
	   7C 20 20 7C 20
	   20 7C 20 7C 20
	   20 7C 20 20 20
	   20 20 7C 20 20
	   20 5F 5F 7C 20
	   20 20 0A 0D
 000008B2  20 20 20 20 20	BYTE "            \    /    |  `--'  | |  `----.|  |____  ",0ah, 0dh
	   20 20 20 20 20
	   20 20 5C 20 20
	   20 20 2F 20 20
	   20 20 7C 20 20
	   60 2D 2D 27 20
	   20 7C 20 7C 20
	   20 60 2D 2D 2D
	   2D 2E 7C 20 20
	   7C 5F 5F 5F 5F
	   20 20 0A 0D
 000008E8  20 20 20 20 20	BYTE "             \__/      \______/   \______||_______| ",0ah, 0dh
	   20 20 20 20 20
	   20 20 20 5C 5F
	   5F 2F 20 20 20
	   20 20 20 5C 5F
	   5F 5F 5F 5F 5F
	   2F 20 20 20 5C
	   5F 5F 5F 5F 5F
	   5F 7C 7C 5F 5F
	   5F 5F 5F 5F 5F
	   7C 20 0A 0D
 0000091E  20 2E 5F 5F 5F	BYTE " .______    _______ .______     _______   _______  __    __  ",0ah, 0dh
	   5F 5F 5F 20 20
	   20 20 5F 5F 5F
	   5F 5F 5F 5F 20
	   2E 5F 5F 5F 5F
	   5F 5F 20 20 20
	   20 20 5F 5F 5F
	   5F 5F 5F 5F 20
	   20 20 5F 5F 5F
	   5F 5F 5F 5F 20
	   20 5F 5F 20 20
	   20 20 5F 5F 20
	   20 0A 0D
 0000095D  20 7C 20 20 20	BYTE " |   _  \  |   ____||   _  \           \ |   ____||  |  |  | ",0ah, 0dh 
	   5F 20 20 5C 20
	   20 7C 20 20 20
	   5F 5F 5F 5F 7C
	   7C 20 20 20 5F
	   20 20 5C 20 20
	   20 20 20 20 20
	   20 20 20 20 5C
	   20 7C 20 20 20
	   5F 5F 5F 5F 7C
	   7C 20 20 7C 20
	   20 7C 20 20 7C
	   20 0A 0D
 0000099C  20 7C 20 20 7C	BYTE " |  |_)  | |  |__   |  |_)  |  |  .--.  ||  |__   |  |  |  | ",0ah, 0dh
	   5F 29 20 20 7C
	   20 7C 20 20 7C
	   5F 5F 20 20 20
	   7C 20 20 7C 5F
	   29 20 20 7C 20
	   20 7C 20 20 2E
	   2D 2D 2E 20 20
	   7C 7C 20 20 7C
	   5F 5F 20 20 20
	   7C 20 20 7C 20
	   20 7C 20 20 7C
	   20 0A 0D
 000009DB  20 7C 20 20 20	BYTE " |   ___/  |   __|  |      /   |  |  |  ||   __|  |  |  |  | ",0ah, 0dh 
	   5F 5F 5F 2F 20
	   20 7C 20 20 20
	   5F 5F 7C 20 20
	   7C 20 20 20 20
	   20 20 2F 20 20
	   20 7C 20 20 7C
	   20 20 7C 20 20
	   7C 7C 20 20 20
	   5F 5F 7C 20 20
	   7C 20 20 7C 20
	   20 7C 20 20 7C
	   20 0A 0D
 00000A1A  20 7C 20 20 7C	BYTE " |  |      |  |____ |  |\  \--.|  '--'  ||  |____ |  `--'  | ",0ah, 0dh 
	   20 20 20 20 20
	   20 7C 20 20 7C
	   5F 5F 5F 5F 20
	   7C 20 20 7C 5C
	   20 20 5C 2D 2D
	   2E 7C 20 20 27
	   2D 2D 27 20 20
	   7C 7C 20 20 7C
	   5F 5F 5F 5F 20
	   7C 20 20 60 2D
	   2D 27 20 20 7C
	   20 0A 0D
 00000A59  20 7C 20 5F 7C	BYTE " | _|      |_______|| _| `.___||_______/ |_______| \______/  ",0 
	   20 20 20 20 20
	   20 7C 5F 5F 5F
	   5F 5F 5F 5F 7C
	   7C 20 5F 7C 20
	   60 2E 5F 5F 5F
	   7C 7C 5F 5F 5F
	   5F 5F 5F 5F 2F
	   20 7C 5F 5F 5F
	   5F 5F 5F 5F 7C
	   20 5C 5F 5F 5F
	   5F 5F 5F 2F 20
	   20 00

 00000000			.code

 00000000			main proc
 00000000  E8 00000000 E		call clrscr
					mov edx, offset titulo
D:\Downloads\ascii.asm(69) : error A2006:undefined symbo
D:\Downloads\ascii.asm(69) : error A2071:initializer magnitude too large for specified size
 00000005  B8 0000000A			mov eax, lightGreen
 0000000A  E8 00000000 E		call SetTextColor
 0000000F  E8 00000000 E		call writestring
 00000014  E8 00000000 E		call crlf 

 00000019  BA 000003B8 R		mov edx, offset digite  
 0000001E  B8 0000000F			mov eax, White
 00000023  E8 00000000 E		call SetTextColor
 00000028  E8 00000000 E		call writestring
 0000002D  E8 00000000 E		call crlf 
						
 00000032  BA 000003DB R		mov edx, offset Instrucoes
 00000037  E8 00000000 E		call WriteString
 0000003C  E8 00000000 E		call ReadInt
					.IF(al == 1)
 00000041  3C 01	   *	    cmp    al, 001h
 00000043  75 29	   *	    jne    @C0001
 00000045  E8 00000000 E			call clrscr
 0000004A  B8 0000000B				mov eax, lightCyan
 0000004F  E8 00000000 E			call SetTextColor
 00000054  BA 0000042A R			mov edx, offset tela
 00000059  E8 00000000 E			call writestring
 0000005E  E8 00000000 E			call crlf

					.ENDIF
 0000006E		   *@C0001:
					
					;DAQUI PRA BAIXO NAO FUNCIONA, SÓ PRO PRINT DA TELA FICAR PARADO PRA VOCE VER
 0000006E				MAIN_LOOP:
 0000006E  EB FE				jmp MAIN_LOOP
					exit 
 00000070  6A 00	   *	    push   +000000000h
 00000072  E8 00000000 E   *	    call   ExitProcess
					
 00000077			main ENDP 
				END main
Microsoft (R) Macro Assembler Version 14.00.24210.0	    12/11/17 09:16:15
D:\Downloads\ascii.asm					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000A97 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000077 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseDriver  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DefDriverProc  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DriverCallback . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrvGetModuleHandle . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDriverModuleHandle  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MigrateAllDrivers  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MigrateSoundEvents . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
NotifyCallbackData . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenDriver . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PlaySoundA . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PlaySoundW . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SendDriverMessage  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WOW32DriverCallback  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WOW32ResolveMultiMediaHandle . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WOWAppExit . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WinmmLogoff  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WinmmLogon . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
aux32Message . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
auxGetDevCapsA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
auxGetDevCapsW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
auxGetNumDevs  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
auxGetVolume . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
auxOutMessage  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
auxSetVolume . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
gfxAddGfx  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
gfxBatchChange . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
gfxCreateGfxFactoriesList  . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
gfxCreateZoneFactoriesList . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
gfxDestroyDeviceInterfaceList  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
gfxEnumerateGfxs . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
gfxLogoff  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
gfxLogon . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
gfxModifyGfx . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
gfxOpenGfx . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
gfxRemoveGfx . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joy32Message . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joyConfigChanged . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joyGetDevCapsA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joyGetDevCapsW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joyGetNumDevs  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joyGetPosEx  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joyGetPos  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joyGetThreshold  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joyReleaseCapture  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joySetCapture  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
joySetThreshold  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000077 Public STDCALL
  MAIN_LOOP  . . . . . . . . . .	L Near	 0000006E _TEXT	
mci32Message . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciDriverNotify  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciDriverYield . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciExecute . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciFreeCommandResource . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciGetCreatorTask  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciGetDeviceIDA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciGetDeviceIDFromElementIDA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciGetDeviceIDFromElementIDW . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciGetDeviceIDW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciGetDriverData . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciGetErrorStringA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciGetErrorStringW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciGetYieldProc  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciLoadCommandResource . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciSendCommandA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciSendCommandW  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciSendStringA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciSendStringW . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciSetDriverData . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mciSetYieldProc  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mid32Message . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiConnect  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiDisconnect . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInAddBuffer  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInClose  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInGetDevCapsA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInGetDevCapsW  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInGetErrorTextA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInGetErrorTextW  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInGetID  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInGetNumDevs . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInMessage  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInOpen . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInPrepareHeader  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInReset  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInStart  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInStop . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiInUnprepareHeader  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutCacheDrumPatches  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutCachePatches  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutClose . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutGetDevCapsA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutGetDevCapsW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutGetErrorTextA . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutGetErrorTextW . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutGetID . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutGetNumDevs  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutGetVolume . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutLongMsg . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutMessage . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutOpen  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutPrepareHeader . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutReset . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutSetVolume . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutShortMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiOutUnprepareHeader . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiStreamClose  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiStreamOpen . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiStreamOut  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiStreamPause  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiStreamPosition . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiStreamProperty . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiStreamRestart  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
midiStreamStop . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerClose . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerGetControlDetailsA  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerGetControlDetailsW  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerGetDevCapsA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerGetDevCapsW . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerGetID . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerGetLineControlsA  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerGetLineControlsW  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerGetLineInfoA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerGetLineInfoW  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerGetNumDevs  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerMessage . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerOpen  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mixerSetControlDetails . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmDrvInstall . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmGetCurrentTask . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmTaskBlock  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmTaskCreate . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmTaskSignal . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmTaskYield  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioAdvance  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioAscend . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioClose  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioCreateChunk  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioDescend  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioFlush  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioGetInfo  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioInstallIOProcA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioInstallIOProcW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioOpenA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioOpenW  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioRead . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioRenameA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioRenameW  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioSeek . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioSendMessage  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioSetBuffer  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioSetInfo  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioStringToFOURCCA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioStringToFOURCCW  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmioWrite  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mmsystemGetVersion . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mod32Message . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
mxd32Message . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
sndPlaySoundA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
sndPlaySoundW  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
tid32Message . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
timeBeginPeriod  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
timeEndPeriod  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
timeGetDevCaps . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
timeGetSystemTime  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
timeGetTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
timeKillEvent  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
timeSetEvent . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInAddBuffer  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInClose  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInGetDevCapsA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInGetDevCapsW  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInGetErrorTextA  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInGetErrorTextW  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInGetID  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInGetNumDevs . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInGetPosition  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInMessage  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInOpen . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInPrepareHeader  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInReset  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInStart  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInStop . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveInUnprepareHeader  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutBreakLoop . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutClose . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutGetDevCapsA . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutGetDevCapsW . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutGetErrorTextA . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutGetErrorTextW . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutGetID . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutGetNumDevs  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutGetPitch  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutGetPlaybackRate . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutGetPosition . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutGetVolume . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutMessage . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutOpen  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutPause . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutPrepareHeader . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutReset . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutRestart . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutSetPitch  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutSetPlaybackRate . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutSetVolume . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutUnprepareHeader . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
waveOutWrite . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
wid32Message . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
winmmDbgOut  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
winmmSetDebugLevel . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
wod32Message . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
Instrucoes . . . . . . . . . . .	Byte	 000003DB _DATA	
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
PlaySound  . . . . . . . . . . .	Text   	 PlaySoundA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WINMM_INC  . . . . . . . . . . .	Text   	 1
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
auxGetDevCaps  . . . . . . . . .	Text   	 auxGetDevCapsA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
digite . . . . . . . . . . . . .	Byte	 000003B8 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
joyGetDevCaps  . . . . . . . . .	Text   	 joyGetDevCapsA
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
mciGetDeviceIDFromElementID  . .	Text   	 mciGetDeviceIDFromElementIDA
mciGetDeviceID . . . . . . . . .	Text   	 mciGetDeviceIDA
mciGetErrorString  . . . . . . .	Text   	 mciGetErrorStringA
mciSendCommand . . . . . . . . .	Text   	 mciSendCommandA
mciSendString  . . . . . . . . .	Text   	 mciSendStringA
midiInGetDevCaps . . . . . . . .	Text   	 midiInGetDevCapsA
midiInGetErrorText . . . . . . .	Text   	 midiInGetErrorTextA
midiOutGetDevCaps  . . . . . . .	Text   	 midiOutGetDevCapsA
midiOutGetErrorText  . . . . . .	Text   	 midiOutGetErrorTextA
mixerGetControlDetails . . . . .	Text   	 mixerGetControlDetailsA
mixerGetDevCaps  . . . . . . . .	Text   	 mixerGetDevCapsA
mixerGetLineControls . . . . . .	Text   	 mixerGetLineControlsA
mixerGetLineInfo . . . . . . . .	Text   	 mixerGetLineInfoA
mmioInstallIOProc  . . . . . . .	Text   	 mmioInstallIOProcA
mmioOpen . . . . . . . . . . . .	Text   	 mmioOpenA
mmioRename . . . . . . . . . . .	Text   	 mmioRenameA
mmioStringToFOURCC . . . . . . .	Text   	 mmioStringToFOURCCA
red  . . . . . . . . . . . . . .	Number	 00000004h   
sndPlaySound . . . . . . . . . .	Text   	 sndPlaySoundA
tela . . . . . . . . . . . . . .	Byte	 0000042A _DATA	
waveInGetDevCaps . . . . . . . .	Text   	 waveInGetDevCapsA
waveInGetErrorText . . . . . . .	Text   	 waveInGetErrorTextA
waveOutGetDevCaps  . . . . . . .	Text   	 waveOutGetDevCapsA
waveOutGetErrorText  . . . . . .	Text   	 waveOutGetErrorTextA
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   6 Errors
